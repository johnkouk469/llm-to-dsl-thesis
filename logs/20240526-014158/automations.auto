```smauto
Automation turn_on_living_room_lights
    condition:
        motion_sensor_living_room.motion_detected == true
    enabled: true
    continuous: true
    actions:
        - smart_light_bulbs_living_room.power: true
        - smart_light_bulbs_living_room.brightness: 100
end

Automation turn_off_living_room_lights
    condition:
        motion_sensor_living_room.motion_detected == false
    enabled: true
    continuous: true
    actions:
        - smart_light_bulbs_living_room.power: false
end

Automation adjust_thermostat
    condition:
        smart_thermostat.current_temp < 20.0
    enabled: true
    continuous: true
    actions:
        - smart_thermostat.target_temp: 22.0
        - smart_thermostat.mode: "heat"
end

Automation play_music_on_speaker
    condition:
        motion_sensor_living_room.motion_detected == true
    enabled: true
    continuous: true
    actions:
        - smart_speaker_living_room.power: true
        - smart_speaker_living_room.playing: "favorite_playlist"
end

Automation turn_on_air_purifier
    condition:
        (smart_thermostat.current_temp > 25.0) OR (smart_thermostat.mode == "cool")
    enabled: true
    continuous: true
    actions:
        - smart_air_purifier.power: true
        - smart_air_purifier.speed: 3
end

Automation notify_refrigerator_door_open
    condition:
        smart_refrigerator.door_open == true
    enabled: true
    continuous: true
    actions:
        - smart_speaker_living_room.playing: "Refrigerator door is open"
end

Automation preheat_oven
    condition:
        smart_coffee_maker.power == true
    enabled: true
    continuous: true
    actions:
        - smart_oven.power: true
        - smart_oven.temperature: 180
        - smart_oven.mode: "bake"
end

Automation start_dishwasher
    condition:
        smart_garbage_bin.bin_full == true
    enabled: true
    continuous: true
    actions:
        - smart_dishwasher.power: true
        - smart_dishwasher.cycle: "intensive"
end

Automation detect_kitchen_water_leak
    condition:
        water_leak_sensor_kitchen.leak_detected == true
    enabled: true
    continuous: true
    actions:
        - smart_speaker_living_room.playing: "Water leak detected in kitchen"
        - smart_light_bulbs_living_room.color: "blue"
end

Automation adjust_bedroom_lighting
    condition:
        smart_light_switch_master_bedroom.power == true
    enabled: true
    continuous: true
    actions:
        - smart_light_bulbs_living_room.power: false
        - smart_light_switch_master_bedroom.power: true
end

Automation open_blinds_morning
    condition:
        (smart_alarm_clock.time == "07:00") AND (smart_blinds.position == 0)
    enabled: true
    continuous: true
    actions:
        - smart_blinds.position: 100
end

Automation enable_security_camera
    condition:
        smart_bed.position == 0
    enabled: true
    continuous: true
    actions:
        - smart_security_camera.recording: true
end

Automation humidifier_control
    condition:
        smart_humidifier.humidity_level < 30
    enabled: true
    continuous: true
    actions:
        - smart_humidifier.power: true
        - smart_humidifier.humidity_level: 40
end

Automation night_light_control
    condition:
        smart_light_bulbs_bedroom2.power == false
    enabled: true
    continuous: true
    actions:
        - smart_night_light.power: true
        - smart_night_light.brightness: 50
end

Automation air_conditioner_control
    condition:
        smart_air_conditioner.power == false
    enabled: true
    continuous: true
    actions:
        - smart_air_conditioner.power: true
        - smart_air_conditioner.temperature: 24
        - smart_air_conditioner.mode: "cool"
end

Automation smoke_detector_alarm
    condition:
        smart_smoke_detector.smoke_detected == true
    enabled: true
    continuous: true
    actions:
        - smart_speaker_living_room.playing: "Smoke detected in Bedroom 2"
        - smart_light_bulbs_living_room.color: "red"
end

Automation fan_control
    condition:
        smart_fan.power == false
    enabled: true
    continuous: true
    actions:
        - smart_fan.power: true
        - smart_fan.speed: 3
end

Automation lock_bedroom3_door
    condition:
        smart_door_lock.locked == false
    enabled: true
    continuous: true
    actions:
        - smart_door_lock.locked: true
end

Automation window_sensor_alert
    condition:
        smart_window_sensor.window_open == true
    enabled: true
    continuous: true
    actions:
        - smart_speaker_bedroom3.playing: "Window is open in Bedroom 3"
end

Automation shower_system_control
    condition:
        smart_mirror.power == true
    enabled: true
    continuous: true
    actions:
        - smart_shower_system.power: true
        - smart_shower_system.water_temperature: 38
end

Automation bathroom_mirror_lighting
    condition:
        smart_shower_system.power == true
    enabled: true
    continuous: true
    actions:
        - smart_mirror.power: true
        - smart_mirror.light_brightness: 80
end

Automation weight_logging
    condition:
        smart_scale.weight > 0
    enabled: true
    continuous: true
    actions:
        - smart_speaker_living_room.playing: "Weight recorded: {smart_scale.weight} kg"
end

Automation toilet_flush
    condition:
        smart_toilet.flush == false
    enabled: true
    continuous: true
    actions:
        - smart_toilet.flush: true
end

Automation bathroom_leak_alert
    condition:
        smart_leak_detector_bathroom2.leak_detected == true
    enabled: true
    continuous: true
    actions:
        - smart_speaker_living_room.playing: "Water leak detected in Bathroom 2"
end

Automation hallway_light_motion
    condition:
        smart_motion_detector_hallway.motion_detected == true
    enabled: true
    continuous: true
    actions:
        - smart_lighting_system_hallway.power: true
        - smart_lighting_system_hallway.brightness: 100
end

Automation sprinkler_schedule
    condition:
        smart_sprinkler_system.schedule == "06:00"
    enabled: true
    continuous: true
    actions:
        - smart_sprinkler_system.power: true
end

Automation doorbell_notification
    condition:
        smart_doorbell.button_pressed == true
    enabled: true
    continuous: true
    actions:
        - smart_speaker_living_room.playing: "Someone is at the door"
end

Automation garage_door_control
    condition:
        smart_garage_door_opener.door_open == false
    enabled: true
    continuous: true
    actions:
        - smart_garage_door_opener.door_open: true
end

Automation outdoor_lights_night
    condition:
        time.now > "18:00"
    enabled: true
    continuous: true
    actions:
        - smart_outdoor_lights.power: true
        - smart_outdoor_lights.brightness: 100
end
```