Metadata
    name: ComprehensiveSmartHome
    version: "1.0.0"
    description: "A comprehensive smart home automation model for a three-bedroom, two-bathroom house."
    author: "Smart Home Developer"
    email: "developer@smarthome.com"
end

RTMonitor
    broker: living_room_broker
    namespace: "comprehensive_smart_home"
    eventTopic: "home/events"
    logsTopic: "home/logs"
end

Broker<MQTT> living_room_broker
    host: "mqtt.livingroom.server"
    port: 1883
    ssl: false
    auth:
        username: "livingroom_user"
        password: "livingroom_pass"
end

Broker<AMQP> kitchen_broker
    host: "amqp.kitchen.server"
    port: 5672
    vhost: "/kitchen"
    topicExchange: "kitchen.amq.topic"
    ssl: true
    auth:
        username: "kitchen_user"
        password: "kitchen_pass"
end

Broker<Redis> master_bedroom_broker
    host: "redis.masterbedroom.server"
    port: 6379
    db: 0
    ssl: true
    auth:
        username: "masterbedroom_user"
        password: "masterbedroom_pass"
end

Broker<MQTT> bedroom_1_broker
    host: "mqtt.bedroom1.server"
    port: 1883
    ssl: false
    auth:
        username: "bedroom1_user"
        password: "bedroom1_pass"
end

Broker<AMQP> bedroom_2_broker
    host: "amqp.bedroom2.server"
    port: 5672
    vhost: "/bedroom2"
    topicExchange: "bedroom2.amq.topic"
    ssl: true
    auth:
        username: "bedroom2_user"
        password: "bedroom2_pass"
end

Broker<Redis> bathroom_1_broker
    host: "redis.bathroom1.server"
    port: 6380
    db: 1
    ssl: true
    auth:
        certPath: "/path/to/bathroom1/cert"
end

Broker<MQTT> bathroom_2_broker
    host: "mqtt.bathroom2.server"
    port: 1883
    ssl: false
    auth:
        username: "bathroom2_user"
        password: "bathroom2_pass"
end

Entity smart_tv
    type: actuator
    topic: "living_room.smart_tv"
    broker: living_room_broker
    attributes:
        - power: bool
        - volume: int = 10
        - channel: int = 1
end

Entity smart_speaker
    type: actuator
    topic: "living_room.smart_speaker"
    broker: living_room_broker
    attributes:
        - power: bool
        - volume: int = 5
        - track: str = "Unknown"
end

Entity smart_light_bulbs_living_room
    type: actuator
    topic: "living_room.smart_light_bulbs"
    broker: living_room_broker
    attributes:
        - power: bool
        - brightness: int = 100
        - color: str = "white"
end

Entity smart_thermostat
    type: hybrid
    topic: "living_room.smart_thermostat"
    broker: living_room_broker
    attributes:
        - current_temp: float = 22.0 -> gaussian(22, 30, 2) with noise uniform(0, 0.5)
        - target_temp: float = 24.0 -> constant(24)
        - mode: str = "auto"
        - status: bool = false
end

Entity smart_plug_living_room
    type: actuator
    topic: "living_room.smart_plug"
    broker: living_room_broker
    attributes:
        - power: bool
end

Entity motion_sensor_living_room
    type: sensor
    topic: "living_room.motion_sensor"
    broker: living_room_broker
    attributes:
        - motion_detected: bool
end

Entity air_quality_sensor
    type: sensor
    topic: "living_room.air_quality_sensor"
    broker: living_room_broker
    attributes:
        - air_quality_index: int = 50 -> gaussian(50, 100, 10) with noise uniform(0, 5)
end

Entity smart_refrigerator
    type: hybrid
    topic: "kitchen.smart_refrigerator"
    broker: kitchen_broker
    attributes:
        - temperature: float = 4.0 -> gaussian(4, 10, 1) with noise uniform(0, 0.5)
        - door_open: bool = false
end

Entity smart_oven
    type: actuator
    topic: "kitchen.smart_oven"
    broker: kitchen_broker
    attributes:
        - power: bool
        - temperature: int = 0
        - timer: int = 0
end

Entity smart_dishwasher
    type: actuator
    topic: "kitchen.smart_dishwasher"
    broker: kitchen_broker
    attributes:
        - power: bool
        - cycle: str = "normal"
end

Entity smart_coffee_maker
    type: actuator
    topic: "kitchen.smart_coffee_maker"
    broker: kitchen_broker
    attributes:
        - power: bool
        - brew_strength: str = "medium"
end

Entity smart_light_switch
    type: actuator
    topic: "kitchen.smart_light_switch"
    broker: kitchen_broker
    attributes:
        - power: bool
end

Entity water_leak_sensor_kitchen
    type: sensor
    topic: "kitchen.water_leak_sensor"
    broker: kitchen_broker
    attributes:
        - leak_detected: bool
end

Entity temperature_humidity_sensor_kitchen
    type: sensor
    topic: "kitchen.temperature_humidity_sensor"
    broker: kitchen_broker
    attributes:
        - temperature: float = 22.0 -> gaussian(22, 30, 2) with noise uniform(0, 0.5)
        - humidity: float = 50.0 -> gaussian(50, 70, 5) with noise uniform(0, 2)
end

Entity smart_bed
    type: sensor
    topic: "master_bedroom.smart_bed"
    broker: master_bedroom_broker
    attributes:
        - sleep_quality: int = 75 -> gaussian(75, 100, 10) with noise uniform(0, 5)
end

Entity smart_blinds
    type: actuator
    topic: "master_bedroom.smart_blinds"
    broker: master_bedroom_broker
    attributes:
        - position: int = 0
end

Entity smart_alarm_clock
    type: actuator
    topic: "master_bedroom.smart_alarm_clock"
    broker: master_bedroom_broker
    attributes:
        - alarm_time: time = "07:00"
        - alarm_set: bool = false
end

Entity smart_light_bulbs_master_bedroom
    type: actuator
    topic: "master_bedroom.smart_light_bulbs"
    broker: master_bedroom_broker
    attributes:
        - power: bool
        - brightness: int = 100
        - color: str = "white"
end

Entity motion_sensor_master_bedroom
    type: sensor
    topic: "master_bedroom.motion_sensor"
    broker: master_bedroom_broker
    attributes:
        - motion_detected: bool
end

Entity smart_plug_master_bedroom
    type: actuator
    topic: "master_bedroom.smart_plug"
    broker: master_bedroom_broker
    attributes:
        - power: bool
end

Entity smart_light_bulbs_bedroom1
    type: actuator
    topic: "bedroom1.smart_light_bulbs"
    broker: bedroom_1_broker
    attributes:
        - power: bool
        - brightness: int = 100
        - color: str = "white"
end

Entity smart_fan_bedroom1
    type: actuator
    topic: "bedroom1.smart_fan"
    broker: bedroom_1_broker
    attributes:
        - power: bool
        - speed: int = 1
end

Entity smart_plug_bedroom1
    type: actuator
    topic: "bedroom1.smart_plug"
    broker: bedroom_1_broker
    attributes:
        - power: bool
end

Entity smart_air_purifier
    type: actuator
    topic: "bedroom1.smart_air_purifier"
    broker: bedroom_1_broker
    attributes:
        - power: bool
        - mode: str = "auto"
end

Entity motion_sensor_bedroom1
    type: sensor
    topic: "bedroom1.motion_sensor"
    broker: bedroom_1_broker
    attributes:
        - motion_detected: bool
end

Entity smart_light_bulbs_bedroom2
    type: actuator
    topic: "bedroom2.smart_light_bulbs"
    broker: bedroom_2_broker
    attributes:
        - power: bool
        - brightness: int = 100
        - color: str = "white"
end

Entity smart_plug_bedroom2
    type: actuator
    topic: "bedroom2.smart_plug"
    broker: bedroom_2_broker
    attributes:
        - power: bool
end

Entity smart_fan_bedroom2
    type: actuator
    topic: "bedroom2.smart_fan"
    broker: bedroom_2_broker
    attributes:
        - power: bool
        - speed: int = 1
end

Entity smart_humidifier
    type: actuator
    topic: "bedroom2.smart_humidifier"
    broker: bedroom_2_broker
    attributes:
        - power: bool
        - level: int = 1
end

Entity door_window_sensor
    type: sensor
    topic: "bedroom2.door_window_sensor"
    broker: bedroom_2_broker
    attributes:
        - door_open: bool
end

Entity smart_mirror
    type: actuator
    topic: "bathroom1.smart_mirror"
    broker: bathroom_1_broker
    attributes:
        - power: bool
        - light: bool
end

Entity smart_scale_bathroom1
    type: sensor
    topic: "bathroom1.smart_scale"
    broker: bathroom_1_broker
    attributes:
        - weight: float = 70.0 -> gaussian(70, 100, 5) with noise uniform(0, 1)
end

Entity smart_shower_head_bathroom1
    type: actuator
    topic: "bathroom1.smart_shower_head"
    broker: bathroom_1_broker
    attributes:
        - power: bool
        - temperature: float = 38.0
end

Entity smart_light_bulbs_bathroom1
    type: actuator
    topic: "bathroom1.smart_light_bulbs"
    broker: bathroom_1_broker
    attributes:
        - power: bool
        - brightness: int = 100
        - color: str = "white"
end

Entity water_leak_sensor_bathroom1
    type: sensor
    topic: "bathroom1.water_leak_sensor"
    broker: bathroom_1_broker
    attributes:
        - leak_detected: bool
end

Entity smart_light_bulbs_bathroom2
    type: actuator
    topic: "bathroom2.smart_light_bulbs"
    broker: bathroom_2_broker
    attributes:
        - power: bool
        - brightness: int = 100
        - color: str = "white"
end

Entity smart_scale_bathroom2
    type: sensor
    topic: "bathroom2.smart_scale"
    broker: bathroom_2_broker
    attributes:
        - weight: float = 70.0 -> gaussian(70, 100, 5) with noise uniform(0, 1)
end

Entity smart_shower_head_bathroom2
    type: actuator
    topic: "bathroom2.smart_shower_head"
    broker: bathroom_2_broker
    attributes:
        - power: bool
        - temperature: float = 38.0
end

Entity water_leak_sensor_bathroom2
    type: sensor
    topic: "bathroom2.water_leak_sensor"
    broker: bathroom_2_broker
    attributes:
        - leak_detected: bool
end

Entity motion_sensor_bathroom2
    type: sensor
    topic: "bathroom2.motion_sensor"
    broker: bathroom_2_broker
    attributes:
        - motion_detected: bool
end

Automation living_room_motion_detected
    condition:
        motion_sensor_living_room.motion_detected == true
    enabled: true
    continuous: false
    actions:
        - smart_light_bulbs_living_room.power: true
        - smart_speaker.power: true
    starts:
        - living_room_motion_not_detected
end

Automation living_room_motion_not_detected
    condition:
        motion_sensor_living_room.motion_detected == false
    enabled: false
    actions:
        - smart_light_bulbs_living_room.power: false
        - smart_speaker.power: false
    starts:
        - living_room_motion_detected
end

Automation start_smart_coffee_maker
    condition:
        system_clock.time >= 06:30
    enabled: true
    continuous: false
    actions:
        - smart_coffee_maker.power: true
        - smart_coffee_maker.brew_strength: "strong"
end

Automation kitchen_water_leak_detected
    condition:
        water_leak_sensor_kitchen.leak_detected == true
    enabled: true
    continuous: false
    actions:
        - smart_dishwasher.power: false
        - smart_oven.power: false
end

Automation master_bedroom_motion_detected
    condition:
        motion_sensor_master_bedroom.motion_detected == true
    enabled: true
    continuous: false
    actions:
        - smart_light_bulbs_master_bedroom.power: true
        - smart_blinds.position: 100
end

Automation master_bedroom_motion_not_detected
    condition:
        motion_sensor_master_bedroom.motion_detected == false
    enabled: false
    actions:
        - smart_light_bulbs_master_bedroom.power: false
        - smart_blinds.position: 0
    starts:
        - master_bedroom_motion_detected
end

Automation bedroom1_motion_detected
    condition:
        motion_sensor_bedroom1.motion_detected == true
    enabled: true
    continuous: false
    actions:
        - smart_light_bulbs_bedroom1.power: true
        - smart_fan_bedroom1.power: true
end

Automation bedroom1_motion_not_detected
    condition:
        motion_sensor_bedroom1.motion_detected == false
    enabled: false
    actions:
        - smart_light_bulbs_bedroom1.power: false
        - smart_fan_bedroom1.power: false
    starts:
        - bedroom1_motion_detected
end

Automation bedroom2_door_open
    condition:
        door_window_sensor.door_open == true
    enabled: true
    continuous: false
    actions:
        - smart_light_bulbs_bedroom2.power: true
end

Automation bedroom2_door_closed
    condition:
        door_window_sensor.door_open == false
    enabled: false
    actions:
        - smart_light_bulbs_bedroom2.power: false
    starts:
        - bedroom2_door_open
end

Automation bathroom1_motion_detected
    condition:
        motion_sensor_bathroom2.motion_detected == true
    enabled: true
    continuous: false
    actions:
        - smart_light_bulbs_bathroom1.power: true
end

Automation bathroom1_motion_not_detected
    condition:
        motion_sensor_bathroom2.motion_detected == false
    enabled: false
    actions:
        - smart_light_bulbs_bathroom1.power: false
    starts:
        - bathroom1_motion_detected
end

Automation bathroom2_motion_detected
    condition:
        motion_sensor_bathroom2.motion_detected == true
    enabled: true
    continuous: false
    actions:
        - smart_light_bulbs_bathroom2.power: true
end

Automation bathroom2_motion_not_detected
    condition:
        motion_sensor_bathroom2.motion_detected == false
    enabled: false
    actions:
        - smart_light_bulbs_bathroom2.power: false
    starts:
        - bathroom2_motion_detected
end

Automation master_bedroom_alarm_clock
    condition:
        system_clock.time == 07:00
    enabled: true
    continuous: false
    actions:
        - smart_alarm_clock.alarm_set: true
        - smart_alarm_clock.alarm_time: "07:00"
        - smart_light_bulbs_master_bedroom.power: true
end

Automation bedroom2_humidifier_control
    condition:
        ((temperature_humidity_sensor_kitchen.humidity > 60) AND (smart_humidifier.power == false)) OR ((temperature_humidity_sensor_kitchen.humidity < 30) AND (smart_humidifier.power == true))
    enabled: true
    continuous: true
    actions:
        - smart_humidifier.power: smart_humidifier.power == false
end
```