entities
    Entity city
        "New York", "London", "Paris", "Tokyo"
    end
    Entity device
        "lights", "thermostat", "window"
    end
    Entity time_of_day
        "morning", "afternoon", "evening", "night"
    end
    Entity reminder_task
        "meeting", "medication", "exercise"
    end
end

synonyms
    Synonym morning
        "good morning", "morning"
    end
    Synonym evening
        "good evening", "evening"
    end
end

eservices
    EServiceHTTP weather_svc
        verb: GET
        host: 'http://api.weather.com'
        path: '/v3/weather/forecast'
    end
    EServiceHTTP device_control_svc
        verb: POST
        host: 'http://api.smarthome.com'
        path: '/control/device'
    end
end

gslots
    GSlot user_name
        type: string
    end
    GSlot preferred_city
        type: string
    end
end

triggers
    Intent greet
        "hello", "hi", "good morning", "good evening"
    end
    Intent ask_weather
        "what's the weather in {city}", "weather forecast for {city}"
    end
    Intent control_device
        "turn on the {device}", "set the {device} to 22 degrees", "open the {device}"
    end
    Intent set_reminder
        "remind me to {reminder_task} at 5 PM", "set a reminder for {reminder_task}"
    end
    Event security_alert
    end
end

dialogues
    Dialogue greet_user
        on: greet
        responses:
            SpeakAction
                "Hello there! How can I assist you today?"
            end
        end
    end

    Dialogue provide_weather
        on: ask_weather
        responses:
            Form
                city: str = HRI('Please provide the city name for the weather forecast.', [TE:city])
            end,
            RESTCallAction
                service: weather_svc
                params: {city: city}
            end,
            SpeakAction
                "The weather forecast for {city} is {response.temp} degrees."
            end
        end
    end

    Dialogue control_devices
        on: control_device
        responses:
            Form
                device: str = HRI('Which device would you like to control?', [TE:device])
            end,
            RESTCallAction
                service: device_control_svc
                params: {device: device, action: action}
            end,
            SpeakAction
                "{device} has been successfully controlled."
            end
        end
    end

    Dialogue set_user_reminder
        on: set_reminder
        responses:
            Form
                reminder_task: str = HRI('What would you like to be reminded about?', [TE:reminder_task])
            end,
            Form
                time: str = HRI('At what time?')
            end,
            SetGSlot
                slot: user_reminders
                value: {reminder_task: reminder_task, time: time}
            end,
            SpeakAction
                "Reminder set for {reminder_task} at {time}."
            end
        end
    end

    Dialogue notify_security_alert
        on: security_alert
        responses:
            SpeakAction
                "Alert! A security event has been detected in your home."
            end
        end
    end
end